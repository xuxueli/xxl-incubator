<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/util 
           http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- dataSource/transactionManager -->
	
	<!-- uuid:支持activiti集群 -->
	<bean id="uuidGenerator" class="org.activiti.engine.impl.persistence.StrongUuidGenerator" />
	
	<!-- Job执行器 -->
	<!-- <bean id="processEngineJobExecutor" class="org.activiti.engine.impl.jobexecutor.DefaultJobExecutor">
		<property name="maxJobsPerAcquisition" value="10" />
		<property name="waitTimeInMillis" value="60000" />
	</bean> -->

	<!-- activiti引擎配置 -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="idGenerator" ref="uuidGenerator" />
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />	<!-- 缺表时自动创建表 -->
		<property name="jobExecutorActivate" value="true" />	<!-- jobExecutor -->
		<!-- <property name="jobExecutor" ref="processEngineJobExecutor" /> -->
		<property name="history" value="activity" />
		<property name="deploymentResources" value="classpath:/activiti/*.bpmn" />
	</bean>

	<!-- activiti引擎 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean" destroy-method="destroy">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>

	<!-- activiti服务 -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />	<!-- 管理和控制发布包和流程定义(负责静态信息) -->
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />		<!-- 负责启动一个流程定义的新实例(获取和保存流程变量) -->
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />				<!-- 与任务有关的功能(由系统中真实人员执行) -->
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />		<!-- Activiti引擎的所有历史数据 -->
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />


</beans>